***ALERT: assign1.sh (complete programe Q2 -Q8) takes a total time of 2 mins 13 seconds to execute. It also shows some warnings on terminal, 
          please ignore those warnings.

**NOTE: report.tex file is created on Overleaf Template.

CONTENTS OF THIS FILE
---------------------

 * Introduction
 * Pre-requisites
 * Running the program
  * Input, Executable and Output of each program
 * Contact Details


INTRODUCTION
------------

Hi!! This is the Assignment #1 submission of course CS685A: Data Mining by Aditya Jain (Roll: 20111004).
This assignment is coded in python 3.6.5 and requires installation of pandas library.

* Folder contains 22 files and 1 folder named "images" in it.
	* 8 shell files
	* 7 python files
	* 3 csv files
	* 1 json file
	* 1 txt file (Readme)
	* 1 tex file (report.tex)
	* 1 pdf file (report.pdf)
        * 1 folder named - images (it stores the graph images of latex report)


* After executing all the shell files (or assign1.sh file), 19 csv files will be generated as output. 

PRE-REQUISITES
------------

* Python 3.6.5 or greater version
* Pandas library
	=> You can run the following command on the linux terminal to install pandas in your system:
		$ sudo -H pip3 install pandas

* Program needs 4 input files for the execution, these files are:
	* raw_data1.csv (It contains patient wise data till April 19. Link: https://api.covid19india.org/csv/latest/raw_data1.csv)
	* raw_data2.csv (It contains patient wise data from April 20 to April 26. Link: https://api.covid19india.org/csv/latest/raw_data2.csv)
	* districts.csv (District wise timeseries of Confirmed, Recovered and Deceased numbers from April 26 to Sep 6 2020.)
	* neighbor-districts-modified.json ( This file is the solution of Q1 of Assignment)	


RUNNING THE PROGRAM
----------------

* Assignment contains 7 coding questions (Q2 to Q8). For each question there exists a python and shell file for 
  execution. 

* To execute the entire program at once: Execute assign1.sh file by following command in linux terminal:
	$ ./assign1.sh

***ALERT: assign1.sh takes a total time of 2 mins 13 seconds to execute. It also shows some warnings on terminal, 
          please ignore those warnings.

*** ALERT: Q2, Q4, Q5, Q6, Q7, AND Q8 ARE NEEDED TO BE EXECUTED IN THE ORDERED MANNER AS ONE REQUIRES THE OUTPUT
	   OF OTHER AS INPUT.


INPUTS, EXECUTABLE, OUTPUTS OF EACH QUESTION'S PROGRAM
-------------------------------------------------------

Q2 
---
-> Requires 4 input files: raw_data1.csv, raw_data2.csv, districts.csv, and neighbor-districts-modified.json
-> Executable file: case-generator.sh  (which will then call case-generator.py)
-> It will generate 3 output files: case-overall.csv, case-month.csv, and case-week.csv

Q3
---
-> Requires 1 input file: neighbor-districts-modified.json
-> Executable file: edge-graph.sh  (which will then call edge-graph.py)
-> It will generate 1 output file: edge-graph.csv

Q4 
---
-> Requires 4 input files: neighbor-districts-modified.json, case-overall.csv, case-month.csv, and case-week.csv 
	** These input files are generated by executing Q2.
-> Executable file: neighbor-generator.sh  (which will then call neighbor-generator.py)
-> It will generate 3 output files: neighbor-overall.csv, neighbor-month.csv, and neighbor-week.csv

Q5 
---
-> Requires 6 input files: neighbor-districts-modified.json, raw_data1.csv, raw_data2.csv, districts.csv,
   case-overall.csv, case-month.csv, and case-week.csv 
	** These input files are generated by executing Q2.
-> Executable file: state-generator.sh  (which will then call state-generator.py)
-> It will generate 3 output files: state-overall.csv, state-month.csv, and state-week.csv

Q6 
---
-> Requires 9 input files: case-overall.csv, case-month.csv, case-week.csv, neighbor-overall.csv,
   neighbor-month.csv, neighbor-week.csv, state-overall.csv, state-month.csv, and state-week.csv 
	** These input files are generated by executing Q2, Q4, Q5
-> Executable file: zscore-generator.sh  (which will then call zscore-generator.py)
-> It will generate 3 output files: zscore-overall.csv, zscore-month.csv, and zscore-week.csv

Q7 
---
-> Requires 9 input files: case-overall.csv, case-month.csv, case-week.csv, neighbor-overall.csv, 
   neighbor-month.csv, neighbor-week.csv, state-overall.csv, state-month.csv, and state-week.csv 
	** These input files are generated by executing Q2, Q4, Q5
-> Executable file: method-spot-generator.sh  (which will then call method-spot-generator.py)
-> It will generate 3 output files: method-spot-overall.csv, method-spot-month.csv, and method-spot-week.csv

Q8 
---
-> Requires 6 input files: zscore-overall.csv, zscore-month.csv, zscore-week.csv, method-spot-overall.csv, 
   method-spot-month.csv, and method-spot-week.csv
	** These input files are generated by executing Q6 and Q8.
-> Executable file: top-generator.sh  (which will then call top-generator.py)
-> It will generate 3 output files: top-overall.csv, top-month.csv, and top-week.csv


CONTACT DETAILS
-----------------

Submitted By: Aditya Jain; Roll: 20111004

In case of any querry please contact on following:
* Email:  jainaditya017@gmail.com



------------------------------------------------ THANK YOU ------------------------------------------------------------ 
